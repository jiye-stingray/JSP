/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.59
 * Generated at: 2022-10-06 11:26:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.security.auth.message.callback.PrivateKeyCallback.Request;
import java.sql.*;

public final class order_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/dbCon.jsp", Long.valueOf(1664882082512L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("javax.security.auth.message.callback.PrivateKeyCallback.Request");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

request.setCharacterEncoding("UTF-8");
Class.forName("oracle.jdbc.OracleDriver");
Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@//localhost:1521/xe", "system", "1234");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src = \"check1.js\"></script>\r\n");
      out.write("<section style = \"position: fixed; left: 0; width:100%; height: 100%; top:80px; background-color: lightgray\" >\r\n");
      out.write("<h2 style =\"text-align: center;\">카페메뉴 주문하기</h2>\r\n");
      out.write("\r\n");
      out.write("<form name=\"orderfrm1\" method=\"post\" action=\"action.jsp\" style =\"display: flex; justify-content: center; text-align: center; align-items: center;\">\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("<input type=\"hidden\" name=\"mode\" value=\"insert\">\r\n");
      out.write("<tr>\r\n");
      out.write("	<td>주문번호</td>\r\n");
      out.write("	");

		request.setCharacterEncoding("utf-8");
		PreparedStatement pstmt = null;
		String orderno = "";
		
		try{
			String sql = "select max(orderno) + 1 from order_tbl";
			pstmt = conn.prepareStatement(sql);
			
			ResultSet rs = pstmt.executeQuery();
			rs.next();
			orderno = rs.getString(1);
			
		}
		catch(Exception e){
			e.printStackTrace();
		}
	
      out.write("\r\n");
      out.write("	<td><input type = \"text\" value = \"");
      out.print(orderno);
      out.write("\" name = \"orderno\" readonly></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td>고객번호</td>\r\n");
      out.write("	<td><input type =\"text\" name=\"custno\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>	\r\n");
      out.write("	<td>고객이름</td>\r\n");
      out.write("	<td><input type=\"text\" name=\"custname\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td>메뉴번호</td>\r\n");
      out.write("	<td>\r\n");
      out.write("	<input type=\"radio\" value=\"10001\" name=\"menuno\"> 아메리카노 &nbsp;\r\n");
      out.write("	<input type=\"radio\" value=\"10002\" name=\"menuno\"> 카페라떼 &nbsp;\r\n");
      out.write("	<input type=\"radio\" value=\"10003\" name=\"menuno\"> 카페모카 &nbsp;\r\n");
      out.write("	<input type=\"radio\" value=\"10004\" name=\"menuno\"> 돌체라때 &nbsp;\r\n");
      out.write("	<input type=\"radio\" value=\"10005\" name=\"menuno\"> 콜드브루 &nbsp;\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td>수량</td>\r\n");
      out.write("	<td>\r\n");
      out.write("	<select name = \"amount\">\r\n");
      out.write("	<option value = \"1\">1개(추가 주문 시 선택)</option>\r\n");
      out.write("	<option value = \"2\" >2개</option>\r\n");
      out.write("	<option value = \"3\" >3개</option>\r\n");
      out.write("	<option value = \"4\" >4개</option>\r\n");
      out.write("	<option value = \"5\" >5개</option>\r\n");
      out.write("	<option value = \"6\" >6개</option>\r\n");
      out.write("	<option value = \"7\" >7개</option>\r\n");
      out.write("	<option value = \"8\" >8개</option>\r\n");
      out.write("	<option value = \"9\" >9개</option>\r\n");
      out.write("	<option value = \"10\">10개</option>\r\n");
      out.write("	</select>\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td>주문일자</td>\r\n");
      out.write("	<td><input type = \"text\" name=\"orderdate\" placeholder=\"예)20220105\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=\"2\">\r\n");
      out.write("<input type=\"submit\" value=\"주문하기\" onclick=\"return jo_check()\"> \r\n");
      out.write("<input type=\"reset\" value=\"다시하기\" onclick=\"return re()\">\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
